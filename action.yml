name: 'Git cherry-pick commits'
author: Rick Meneely <rick@meneely.com>
branding:
  icon: git-commit
  color: purple
description: Performs a git cherry-pick on a list of commitSHAs"
inputs:
  commits:
    description: Space separated list of commits
    required: true
  repo_path:
    description: Path to the git repo
    required: false
    default: '.' # current directory
  keep_redundant_commits:
    description: git cherry-pick --keep-redundant-commits option
    required: false
  no_execute:
    description: Do not execute the git cherry-pick command
    required: false
outputs:
  commits:
    description: 'Returns a space separated list of commit values'
    value: ${{ steps.git-cherry-pick-commits.outputs.commits }}
  count:
    description: 'Returns the number of sucessful commits'
    value: ${{ steps.git-cherry-pick-commits.outputs.count }}
runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - run: pip install -r requirements.txt
      working-directory: ${{ github.action_path }}
      shell: bash
    - id: git-cherry-pick-commits
      run: |
        keep_redundant_commits=""
        if [ "X${{ inputs.keep_redundant_commits }}" == "Xtrue" ]; then
          keep_redundant_commits="--keep-redundant-commits"
        fi
        no_execute=""
        if [ "X${{ inputs.no_execute }}" == "Xtrue" ]; then
          no_execute="--no-execute"
        fi
        python ${{ github.action_path }}/git-cherry-pick-commits.py \
          --commits "${{ inputs.commits }}" \
          --repo-path "${{ inputs.repo_path }}" \
          ${keep_redundant_commits} \
          ${no_execute}
      shell: bash
